//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v5.10.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using SD.LLBLGen.Pro.QuerySpec;
using Charcillaries.Data.HelperClasses;
using SD.LLBLGen.Pro.LinqSupportClasses;
using SD.LLBLGen.Pro.LinqSupportClasses.DTOProjectionHelpers;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Charcillaries.Data.Views.Persistence
{

	/// <summary>Static class for (extension) methods for fetching and projecting instances of Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView from the entity model.</summary>
	public static partial class TourOperatorDetailsViewPersistence
	{
		private static readonly System.Linq.Expressions.Expression<Func<Charcillaries.Data.EntityClasses.TourOperatorEntity, Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView>> _projectorExpression = CreateProjectionFunc();
		private static readonly Func<Charcillaries.Data.EntityClasses.TourOperatorEntity, Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView> _compiledProjector = CreateProjectionFunc().Compile();
		/// <summary>Linq specific partial method for obtaining projection adjustments for the projection method <see cref="ProjectToTourOperatorDetailsView(System.Linq.IQueryable{Charcillaries.Data.EntityClasses.TourOperatorEntity})"/></summary>
		/// <param name="projectionAdjustments">Set this argument in an implementation of this partial method to a projection lambda similar to the generated projection in <see cref="CreateProjectionFunc"/></param>
		/// <remarks>Linq specific</remarks>
		static partial void GetAdjustmentsForProjectToTourOperatorDetailsView(ref System.Linq.Expressions.Expression<Func<Charcillaries.Data.EntityClasses.TourOperatorEntity, Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView>> projectionAdjustments);
		/// <summary>QuerySpec specific partial method for obtaining projection adjustments for the projection method <see cref="ProjectToTourOperatorDetailsView(EntityQuery{Charcillaries.Data.EntityClasses.TourOperatorEntity}, Charcillaries.Data.FactoryClasses.QueryFactory)"/></summary>
		/// <param name="projectionAdjustments">Set this argument in an implementation of this partial method to a projection lambda similar to the generated projection in <see cref="ProjectToTourOperatorDetailsView(EntityQuery{Charcillaries.Data.EntityClasses.TourOperatorEntity}, Charcillaries.Data.FactoryClasses.QueryFactory)"/></param>
		/// <remarks>QuerySpec specific</remarks>
		static partial void GetAdjustmentsForProjectToTourOperatorDetailsViewQs(ref System.Linq.Expressions.Expression<Func<Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView>> projectionAdjustments);
	
		/// <summary>Empty static ctor for triggering initialization of static members in a thread-safe manner</summary>
		static TourOperatorDetailsViewPersistence() { }
	
		/// <summary>Extension method which produces a projection to Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView which instances are projected from the results of the specified baseQuery, which returns Charcillaries.Data.EntityClasses.TourOperatorEntity instances, the root entity of the derived element returned by this query.</summary>
		/// <param name="baseQuery">The base query to project the derived element instances from.</param>
		/// <returns>IQueryable to retrieve Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView instances</returns>
		public static IQueryable<Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView> ProjectToTourOperatorDetailsView(this IQueryable<Charcillaries.Data.EntityClasses.TourOperatorEntity> baseQuery)
		{
			return baseQuery.Select(_projectorExpression);
		}

		/// <summary>Extension method which produces a projection to Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView which instances are projected from the results of the specified baseQuery using QuerySpec, which returns Charcillaries.Data.EntityClasses.TourOperatorEntity instances, the root entity of the derived element returned by this query.</summary>
		/// <param name="baseQuery">The base query to project the derived element instances from.</param>
		/// <param name="qf">The query factory used to create baseQuery.</param>
		/// <returns>DynamicQuery to retrieve Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView instances</returns>
		public static DynamicQuery<Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView> ProjectToTourOperatorDetailsView(this EntityQuery<Charcillaries.Data.EntityClasses.TourOperatorEntity> baseQuery, Charcillaries.Data.FactoryClasses.QueryFactory qf)
		{
			System.Linq.Expressions.Expression<Func<Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView>> projectionAdjustments = null;
			GetAdjustmentsForProjectToTourOperatorDetailsViewQs(ref projectionAdjustments);
			return qf.Create()
				.From(baseQuery.Select(Projection.Full).As("__BQ"))
				.Select(LinqUtils.MergeProjectionAdjustmentsIntoProjection(() => new Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView()
				{
					ContactInfo = TourOperatorFields.ContactInfo.Source("__BQ").ToValue<System.String>(),
					Id = TourOperatorFields.Id.Source("__BQ").ToValue<System.Int32>(),
					Name = TourOperatorFields.Name.Source("__BQ").ToValue<System.String>(),
	// __LLBLGENPRO_USER_CODE_REGION_START ProjectionRegionQS_TourOperatorDetailsView 
	// __LLBLGENPRO_USER_CODE_REGION_END 
				}, projectionAdjustments, false));
		}

		/// <summary>Extension method which produces a projection to Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView which instances are projected from the Charcillaries.Data.EntityClasses.TourOperatorEntity entity instance specified, the root entity of the derived element returned by this method.</summary>
		/// <param name="entity">The entity to project from.</param>
		/// <returns>Charcillaries.Data.EntityClasses.TourOperatorEntity instance created from the specified entity instance</returns>
		public static Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView ProjectToTourOperatorDetailsView(this Charcillaries.Data.EntityClasses.TourOperatorEntity entity)
		{
			return _compiledProjector(entity);
		}

		private static System.Linq.Expressions.Expression<Func<Charcillaries.Data.EntityClasses.TourOperatorEntity, Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView>> CreateProjectionFunc()
		{
			System.Linq.Expressions.Expression<Func<Charcillaries.Data.EntityClasses.TourOperatorEntity, Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView>> mainProjection = p__0 => new Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView()
			{
				ContactInfo = p__0.ContactInfo,
				Id = p__0.Id,
				Name = p__0.Name,
	// __LLBLGENPRO_USER_CODE_REGION_START ProjectionRegion_TourOperatorDetailsView 
	// __LLBLGENPRO_USER_CODE_REGION_END 
			};
			System.Linq.Expressions.Expression<Func<Charcillaries.Data.EntityClasses.TourOperatorEntity, Charcillaries.Data.Views.DtoClasses.TourOperatorDetailsView>> projectionAdjustments = null;
			GetAdjustmentsForProjectToTourOperatorDetailsView(ref projectionAdjustments);
			return LinqUtils.MergeProjectionAdjustmentsIntoProjection(mainProjection, projectionAdjustments, true);
		}
	}
}


