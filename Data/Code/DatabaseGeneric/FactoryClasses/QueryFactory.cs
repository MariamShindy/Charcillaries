//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
////////////////////////////////////////////////////////////// 
using System;
using System.Linq;
using Charcillaries.Data.EntityClasses;
using Charcillaries.Data.HelperClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;
using SD.LLBLGen.Pro.QuerySpec.AdapterSpecific;
using SD.LLBLGen.Pro.QuerySpec;

namespace Charcillaries.Data.FactoryClasses
{
	/// <summary>Factory class to produce DynamicQuery instances and EntityQuery instances</summary>
	public partial class QueryFactory : QueryFactoryBase2
	{
		/// <summary>Creates and returns a new EntityQuery for the Airline entity</summary>
		public EntityQuery<AirlineEntity> Airline { get { return Create<AirlineEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the Amenity entity</summary>
		public EntityQuery<AmenityEntity> Amenity { get { return Create<AmenityEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the AmenityFeedback entity</summary>
		public EntityQuery<AmenityFeedbackEntity> AmenityFeedback { get { return Create<AmenityFeedbackEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the Flight entity</summary>
		public EntityQuery<FlightEntity> Flight { get { return Create<FlightEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the FlightRoute entity</summary>
		public EntityQuery<FlightRouteEntity> FlightRoute { get { return Create<FlightRouteEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the Passenger entity</summary>
		public EntityQuery<PassengerEntity> Passenger { get { return Create<PassengerEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the PassengerAmenitySelection entity</summary>
		public EntityQuery<PassengerAmenitySelectionEntity> PassengerAmenitySelection { get { return Create<PassengerAmenitySelectionEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the Person entity</summary>
		public EntityQuery<PersonEntity> Person { get { return Create<PersonEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the Role entity</summary>
		public EntityQuery<RoleEntity> Role { get { return Create<RoleEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the RouteAmenity entity</summary>
		public EntityQuery<RouteAmenityEntity> RouteAmenity { get { return Create<RouteAmenityEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the RouteFlightFeedback entity</summary>
		public EntityQuery<RouteFlightFeedbackEntity> RouteFlightFeedback { get { return Create<RouteFlightFeedbackEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the TourOperator entity</summary>
		public EntityQuery<TourOperatorEntity> TourOperator { get { return Create<TourOperatorEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the TourOperatorAirline entity</summary>
		public EntityQuery<TourOperatorAirlineEntity> TourOperatorAirline { get { return Create<TourOperatorAirlineEntity>(); } }

		/// <summary>Creates and returns a new EntityQuery for the User entity</summary>
		public EntityQuery<UserEntity> User { get { return Create<UserEntity>(); } }

		/// <inheritdoc/>
		protected override IElementCreatorCore CreateElementCreator() { return new ElementCreator(); }
 
	}
}