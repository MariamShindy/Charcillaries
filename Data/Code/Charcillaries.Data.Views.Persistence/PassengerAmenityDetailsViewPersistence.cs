//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v5.10.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using SD.LLBLGen.Pro.QuerySpec;
using Charcillaries.Data.HelperClasses;
using SD.LLBLGen.Pro.LinqSupportClasses;
using SD.LLBLGen.Pro.LinqSupportClasses.DTOProjectionHelpers;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Charcillaries.Data.Views.Persistence
{

	/// <summary>Static class for (extension) methods for fetching and projecting instances of Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView from the entity model.</summary>
	public static partial class PassengerAmenityDetailsViewPersistence
	{
		private static readonly System.Linq.Expressions.Expression<Func<Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity, Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView>> _projectorExpression = CreateProjectionFunc();
		private static readonly Func<Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity, Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView> _compiledProjector = CreateProjectionFunc().Compile();
		/// <summary>Linq specific partial method for obtaining projection adjustments for the projection method <see cref="ProjectToPassengerAmenityDetailsView(System.Linq.IQueryable{Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity})"/></summary>
		/// <param name="projectionAdjustments">Set this argument in an implementation of this partial method to a projection lambda similar to the generated projection in <see cref="CreateProjectionFunc"/></param>
		/// <remarks>Linq specific</remarks>
		static partial void GetAdjustmentsForProjectToPassengerAmenityDetailsView(ref System.Linq.Expressions.Expression<Func<Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity, Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView>> projectionAdjustments);
		/// <summary>QuerySpec specific partial method for obtaining projection adjustments for the projection method <see cref="ProjectToPassengerAmenityDetailsView(EntityQuery{Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity}, Charcillaries.Data.FactoryClasses.QueryFactory)"/></summary>
		/// <param name="projectionAdjustments">Set this argument in an implementation of this partial method to a projection lambda similar to the generated projection in <see cref="ProjectToPassengerAmenityDetailsView(EntityQuery{Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity}, Charcillaries.Data.FactoryClasses.QueryFactory)"/></param>
		/// <remarks>QuerySpec specific</remarks>
		static partial void GetAdjustmentsForProjectToPassengerAmenityDetailsViewQs(ref System.Linq.Expressions.Expression<Func<Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView>> projectionAdjustments);
	
		/// <summary>Empty static ctor for triggering initialization of static members in a thread-safe manner</summary>
		static PassengerAmenityDetailsViewPersistence() { }
	
		/// <summary>Extension method which produces a projection to Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView which instances are projected from the results of the specified baseQuery, which returns Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity instances, the root entity of the derived element returned by this query.</summary>
		/// <param name="baseQuery">The base query to project the derived element instances from.</param>
		/// <returns>IQueryable to retrieve Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView instances</returns>
		public static IQueryable<Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView> ProjectToPassengerAmenityDetailsView(this IQueryable<Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity> baseQuery)
		{
			return baseQuery.Select(_projectorExpression);
		}

		/// <summary>Extension method which produces a projection to Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView which instances are projected from the results of the specified baseQuery using QuerySpec, which returns Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity instances, the root entity of the derived element returned by this query.</summary>
		/// <param name="baseQuery">The base query to project the derived element instances from.</param>
		/// <param name="qf">The query factory used to create baseQuery.</param>
		/// <returns>DynamicQuery to retrieve Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView instances</returns>
		public static DynamicQuery<Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView> ProjectToPassengerAmenityDetailsView(this EntityQuery<Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity> baseQuery, Charcillaries.Data.FactoryClasses.QueryFactory qf)
		{
			System.Linq.Expressions.Expression<Func<Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView>> projectionAdjustments = null;
			GetAdjustmentsForProjectToPassengerAmenityDetailsViewQs(ref projectionAdjustments);
			return qf.Create()
				.From(baseQuery.Select(Projection.Full).As("__BQ")
					.InnerJoin(qf.Passenger.As("__L0_0")).On(PassengerAmenitySelectionFields.PassengerId.Source("__BQ").Equal(PassengerFields.Id.Source("__L0_0")))
					.InnerJoin(qf.Flight.As("__L0_1")).On(PassengerFields.FlightId.Source("__L0_0").Equal(FlightFields.Id.Source("__L0_1")))
					.InnerJoin(qf.RouteAmenity.As("__L0_2")).On(PassengerAmenitySelectionFields.RouteAmenityId.Source("__BQ").Equal(RouteAmenityFields.Id.Source("__L0_2")))
					.InnerJoin(qf.Amenity.As("__L0_3")).On(RouteAmenityFields.AmenityId.Source("__L0_2").Equal(AmenityFields.Id.Source("__L0_3"))))
				.Select(LinqUtils.MergeProjectionAdjustmentsIntoProjection(() => new Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView()
				{
					AmenityId = PassengerAmenitySelectionFields.RouteAmenityId.Source("__BQ").ToValue<System.Int32>(),
					Customization = PassengerAmenitySelectionFields.Customization.Source("__BQ").ToValue<System.String>(),
					Id = PassengerAmenitySelectionFields.Id.Source("__BQ").ToValue<System.Int32>(),
					ObjectStatus = PassengerAmenitySelectionFields.ObjectStatus.Source("__BQ").ToValue<System.Int32>(),
					Passenger = new Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsViewTypes.Passenger()
						{
							Flight = new Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsViewTypes.PassengerTypes.Flight()
								{
									ArrivalDate = FlightFields.ArrivalDate.Source("__L0_1").ToValue<System.DateTime>(),
									DepartureDate = FlightFields.DepartureDate.Source("__L0_1").ToValue<System.DateTime>(),
									FlightNumber = FlightFields.FlightNumber.Source("__L0_1").ToValue<System.String>(),
									FlightRouteId = FlightFields.FlightRouteId.Source("__L0_1").ToValue<System.Int32>(),
									Id = FlightFields.Id.As("Id1").Source("__L0_1").ToValue<System.Int32>(),
									NumberOfSeats = FlightFields.NumberOfSeats.Source("__L0_1").ToValue<System.Int32>(),
									ObjectStatus = FlightFields.ObjectStatus.As("ObjectStatus1").Source("__L0_1").ToValue<System.Int32>(),
									TourOperatorId = FlightFields.TourOperatorId.Source("__L0_1").ToValue<System.Int32>(),
								},
							FlightId = PassengerFields.FlightId.Source("__L0_0").ToValue<System.Int32>(),
							Id = PassengerFields.Id.As("Id2").Source("__L0_0").ToValue<System.Int32>(),
							PersonId = PassengerFields.PersonId.Source("__L0_0").ToValue<System.Int32>(),
						},
					PassengerId = PassengerAmenitySelectionFields.PassengerId.Source("__BQ").ToValue<System.Int32>(),
					Quantity = PassengerAmenitySelectionFields.Quantity.Source("__BQ").ToValue<Nullable<System.Int32>>(),
					RouteAmenity = new Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsViewTypes.RouteAmenity()
						{
							Amenity = new Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsViewTypes.RouteAmenityTypes.Amenity()
								{
									Name = AmenityFields.Name.Source("__L0_3").ToValue<System.String>(),
								},
							AmenityId = RouteAmenityFields.AmenityId.Source("__L0_2").ToValue<System.Int32>(),
						},
	// __LLBLGENPRO_USER_CODE_REGION_START ProjectionRegionQS_PassengerAmenityDetailsView 
	// __LLBLGENPRO_USER_CODE_REGION_END 
				}, projectionAdjustments, false));
		}

		/// <summary>Extension method which produces a projection to Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView which instances are projected from the Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity entity instance specified, the root entity of the derived element returned by this method.</summary>
		/// <param name="entity">The entity to project from.</param>
		/// <returns>Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity instance created from the specified entity instance</returns>
		public static Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView ProjectToPassengerAmenityDetailsView(this Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity entity)
		{
			return _compiledProjector(entity);
		}

		private static System.Linq.Expressions.Expression<Func<Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity, Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView>> CreateProjectionFunc()
		{
			System.Linq.Expressions.Expression<Func<Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity, Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView>> mainProjection = p__0 => new Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView()
			{
				AmenityId = p__0.RouteAmenityId,
				Customization = p__0.Customization,
				Id = p__0.Id,
				ObjectStatus = p__0.ObjectStatus,
				Passenger = new Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsViewTypes.Passenger()
				{
					Flight = new Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsViewTypes.PassengerTypes.Flight()
					{
						ArrivalDate = p__0.Passenger.Flight.ArrivalDate,
						DepartureDate = p__0.Passenger.Flight.DepartureDate,
						FlightNumber = p__0.Passenger.Flight.FlightNumber,
						FlightRouteId = p__0.Passenger.Flight.FlightRouteId,
						Id = p__0.Passenger.Flight.Id,
						NumberOfSeats = p__0.Passenger.Flight.NumberOfSeats,
						ObjectStatus = p__0.Passenger.Flight.ObjectStatus,
						TourOperatorId = p__0.Passenger.Flight.TourOperatorId,
					},
					FlightId = p__0.Passenger.FlightId,
					Id = p__0.Passenger.Id,
					PersonId = p__0.Passenger.PersonId,
				},
				PassengerId = p__0.PassengerId,
				Quantity = p__0.Quantity,
				RouteAmenity = new Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsViewTypes.RouteAmenity()
				{
					Amenity = new Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsViewTypes.RouteAmenityTypes.Amenity()
					{
						Name = p__0.RouteAmenity.Amenity.Name,
					},
					AmenityId = p__0.RouteAmenity.AmenityId,
				},
	// __LLBLGENPRO_USER_CODE_REGION_START ProjectionRegion_PassengerAmenityDetailsView 
	// __LLBLGENPRO_USER_CODE_REGION_END 
			};
			System.Linq.Expressions.Expression<Func<Charcillaries.Data.EntityClasses.PassengerAmenitySelectionEntity, Charcillaries.Data.Views.DtoClasses.PassengerAmenityDetailsView>> projectionAdjustments = null;
			GetAdjustmentsForProjectToPassengerAmenityDetailsView(ref projectionAdjustments);
			return LinqUtils.MergeProjectionAdjustmentsIntoProjection(mainProjection, projectionAdjustments, true);
		}
	}
}


